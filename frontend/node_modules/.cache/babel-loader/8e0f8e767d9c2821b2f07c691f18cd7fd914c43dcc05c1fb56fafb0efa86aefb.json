{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Blog Mongodb\\\\frontend\\\\src\\\\App.jsx\";\n// import Topbar from \"./components/topbar/Topbar\";\n// import Homepage from \"./pages/homepage/Homepage\";\n// import Login from \"./pages/login/Login\";\n// import Register from \"./pages/register/Register\";\n// import Settings from \"./pages/settings/Settings\";\n// import Single from \"./pages/single/Single\";\n// import Write from \"./pages/write/Write\";\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n// function App() {\n//   const currentUser = true; // Set this to true or false based on the user's authentication status\n\n//   let routeElement;\n\n//   if (currentUser) {  // If the user is authenticated (currentUser is true)\n//     routeElement = <Homepage />;\n//   } else {\n//     routeElement = <Register />;\n//   }\n\n//   let writeElement;\n//   if (currentUser) {\n//     writeElement = <Write />;\n//   } else {\n//     writeElement = <Login />;\n//   }\n\n//   let settingsElement;\n//   if (currentUser) {\n//     settingsElement = <Settings />;\n//   } else {\n//     settingsElement = <Login />;\n//   }\n//   return (\n//     <Router>\n//       <Topbar />\n//       <Routes>\n//         <Route path=\"/\" element={<Homepage />} />\n//         <Route path=\"/posts\" element={<Homepage />} />\n//         <Route path=\"/register\" element={routeElement} />\n//         <Route path=\"/login\" element={routeElement} />\n//         <Route path=\"/post/:id\" element={<Single />} />\n//         <Route path=\"/write\" element={writeElement} />\n//         <Route path=\"/settings\" element={settingsElement} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const currentUser = true;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: currentUser ? /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: currentUser ? /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post/:id\",\n        element: /*#__PURE__*/_jsxDEV(Single, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/write\",\n        element: currentUser ? /*#__PURE__*/_jsxDEV(Write, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/settings\",\n        element: currentUser ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","currentUser","children","Topbar","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Homepage","Register","Login","Single","Write","Settings","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/Blog Mongodb/frontend/src/App.jsx"],"sourcesContent":["// import Topbar from \"./components/topbar/Topbar\";\n// import Homepage from \"./pages/homepage/Homepage\";\n// import Login from \"./pages/login/Login\";\n// import Register from \"./pages/register/Register\";\n// import Settings from \"./pages/settings/Settings\";\n// import Single from \"./pages/single/Single\";\n// import Write from \"./pages/write/Write\";\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n// function App() {\n//   const currentUser = true; // Set this to true or false based on the user's authentication status\n\n//   let routeElement;\n\n//   if (currentUser) {  // If the user is authenticated (currentUser is true)\n//     routeElement = <Homepage />;\n//   } else {\n//     routeElement = <Register />;\n//   }\n\n//   let writeElement;\n//   if (currentUser) {\n//     writeElement = <Write />;\n//   } else {\n//     writeElement = <Login />;\n//   }\n\n//   let settingsElement;\n//   if (currentUser) {\n//     settingsElement = <Settings />;\n//   } else {\n//     settingsElement = <Login />;\n//   }\n//   return (\n//     <Router>\n//       <Topbar />\n//       <Routes>\n//         <Route path=\"/\" element={<Homepage />} />\n//         <Route path=\"/posts\" element={<Homepage />} />\n//         <Route path=\"/register\" element={routeElement} />\n//         <Route path=\"/login\" element={routeElement} />\n//         <Route path=\"/post/:id\" element={<Single />} />\n//         <Route path=\"/write\" element={writeElement} />\n//         <Route path=\"/settings\" element={settingsElement} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const currentUser = true;\n  return (\n    <Router>\n      <Topbar />\n      <Routes>\n        <Route path=\"/\" element={<Homepage />} />\n        <Route path=\"/posts\" element={<Homepage />} />\n        <Route\n          path=\"/register\"\n          element={currentUser ? <Homepage /> : <Register />}\n        />\n        <Route path=\"/login\" element={currentUser ? <Homepage /> : <Login />} />\n        <Route path=\"/post/:id\" element={<Single />} />\n        <Route\n          path=\"/write\"\n          element={currentUser ? <Write /> : <Login />}\n        />\n        <Route\n          path=\"/settings\"\n          element={currentUser ? <Settings /> : <Login />}\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}